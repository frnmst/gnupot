{"name":"GNUpot","tagline":"Yet another libre Dropbox clone (only for the right aspects) written in bash.","body":"GNUpot\r\n======\r\nYet another libre Dropbox clone (only for the right aspects) written in bash. \r\n\r\n##Purpose of this project\r\n\r\nLots of us using Dropbox (or similar) like its functionalities. However \r\nthese services have some defects:\r\n- Your data could be anywhere in the world.\r\n  - This means you don't have full control over your own files.\r\n- Size limits\r\n  - Usually of a few Gigabytes.\r\n- Clients used to access these servces are usually proprietary.\r\n- These program are also heavy (in terms of disk,  memory and processor usage).\r\n- What are you going to do if those *owners* close the services?\r\n\r\nThe aim of this project is to have a completely free (as in freedom) \r\nreplacement for Dropbox (and also similar services) that runs exclusively in \r\nour computers. All of this is done following the *K-I-S-S* (Keep It Simple, \r\nStupid) principal.\r\n\r\n###Why the name GNUpot\r\n\r\n- **GNU** beause of the freedom associated to this program.\r\n- **pot** because it gives the idea of some type of container.\r\n\r\n##Ideas behind the project\r\n\r\n- Simple.\r\n  - Use of `bash` as scripting language makes the program overall very \r\n    integrated with a GNU/Linux system (as well as other UNIX-like systems). \r\n  - Programming and manteinance should also be trivial this way.\r\n- When some kind of change is made, this is sent automatically to the server \r\n  (or to the client).\r\n  - This is possible with `inotify` which looks for changes inside the watch \r\n    directories both on client and server.\r\n- Encrypted and passord-less communication between client and server.\r\n  - `ssh` is very suitable and malleable for this job. **WORK IN PROGRESS**\r\n- Minimal bandwidth usage.\r\n  - If we are setting up a server at home it is unlikely to have fast upload \r\n    speed. We have to avoid to use all available upload (and even download \r\n    bandwidth) on server side (especially). ?This is achieved using `trickle`?\r\n    **TODO**\r\n- Desktop notifications.\r\n  - When an event is originated (either on client or on server) user must be \r\n    notified. The command `notify-send` is perfect for this because of its \r\n    simplicity.\r\n- Solid syncing agent.\r\n  - `git` is designed for collaboration and has an excellent SSH support. \r\n- Automatic file conflict detection and resolution. **BASIC FUNCTIONALITY**\r\n- Automatic backup to a maximum user defined number of backups.\r\n- Easily shareable directories.\r\n  - User and groups are managed by simple text files on the server. **TODO**\r\n- No server-side program running.\r\n  - Only programs like `inotify` and `git` needs to be installed on the \r\n    server.\r\n- Very simple setup.\r\n  - Stupid setup, using `dialog`, which initializes local and remote repositories.\r\n    User configuration is also written.\r\n\r\n###WARNING\r\n\r\n**THIS IS A WORK IN PROGESS. DON'T EXPECT THAT IT WORKS OUT OF THE BOX.**\r\n\r\n##Howto\r\n\r\n```\r\n$ git clone https://github.com/frnmst/gnupot.git\r\n$ cd gnupot\r\n```\r\nYou have **two possibilities** for the setup of GNUpot:\r\n- run the setup: `./setup`\r\n- **OR** copy `srv/gnupot.config.example` to `~/.config/gnupot/gnupot.config` \r\n  and edit it to your needs. Manually initialize a shared repository on the \r\n  server and clone it on the client.\r\n\r\nAfter that you must:\r\n- be sure to have an SSH server up and running.\r\n- be able to connect to that server with private/public keys (these must be\r\n  passwordless).\r\n- install the packages described below.\r\n\r\nOnce you have completed **all** the previous points you can actually run the \r\nprogram:\r\n```\r\n$ ./gnupot\r\n```\r\n\r\n###Packages to install (dependencies)\r\n\r\n- bash 4.3.033-1\r\n  - Server and client.\r\n- openssh 6.8p1-2\r\n  - Server and client.\r\n- inotify-tools 3.14-4 (inotifywait) [Tells the script that some changes have \r\n  been made to a certain file.]\r\n  - Server and client.\r\n- util-linux 2.26.1-3 (flock) [Locks script and avoids contemporary local and\r\n  remote sync.]\r\n  - Client only.\r\n- libnotify 0.7.6-1 (notify-send) [Sends notifications to notification server.]\r\n  - Client only.\r\n- #Be sure to have 1 and only 1 notify server installed. It should be already \r\n  installed on your system.\r\n  #dunst () [Lightweight notification server; it displays notifications.]\r\n  - Client only.\r\n- git 2.4.1-1 (git) [Program that syncs file and does versioning control.]\r\n  - Server and client.\r\n- ?trickle?\r\n- dialog 1:1.2_20150513-1 (dialog) [Display user friendly dialog messages \r\n  during the setup.]\r\n\r\n##Help\r\n\r\n**TODO**\r\n```\r\n./gnupot -h\r\n```\r\n  \r\n##Tests\r\n\r\nTested on [Parabola GNU/Linux-libre](https://www.parabola.nu/), [Arch \r\nLinux](https://www.archlinux.org/) and [Manjaro \r\nLinux](https://manjaro.github.io/).\r\n\r\n**ANY HELP IN CONTRIBUTING TO THIS PROJECT IS WARMLY WELCOMED.**\r\n\r\n##Contact\r\n\r\nfranco.masotti@live.com or franco.masotti@student.unife.it\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}